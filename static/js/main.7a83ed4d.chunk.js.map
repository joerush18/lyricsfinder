{"version":3,"sources":["Axios.js","components/SingleTrack.js","components/UI/Spinner.js","components/Body.js","components/Searchbox.js","components/Header.js","components/LyricsBox.js","components/SearchResult.js","App.js","reportWebVitals.js","index.js"],"names":["instance","Axios","create","baseURL","SingleTrack","props","className","title","artistname","onClick","click","Spinner","style","width","height","role","REQ_ID","Body","useState","Tracks","setTracks","Error","setError","Spin","setSpin","useEffect","Instance","get","then","track","data","message","body","track_list","catch","error","console","log","song","map","album_name","artist_name","trackId","trackName","trackArtist","queryEncode","encodeURIComponent","history","push","pathname","search","join","getIdHandler","track_id","album_id","color","viewBox","fill","xmlns","fillRule","d","withRouter","ArtistName","setArtistName","onSubmitHandler","event","preventDefault","onSubmit","type","placeholder","aria-label","onChange","target","value","LyricsBox","Lyrics","setLyrics","id","queryDecode","URLSearchParams","location","entries","parm","keys","Object","res","lyrics","lyrics_body","goBack","SearchResult","SearchedTracks","setSearchedTracks","Artistname","replace","fetchData","err","alert","items","track_name","textTransform","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAKeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAO,0ECgBIC,G,MAdK,SAAAC,GAChB,OACA,qBAAKC,UAAU,YAAf,SACA,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BD,EAAME,QAClC,mBAAGD,UAAU,YAAb,SAA0BD,EAAMG,aAChC,wBAAQC,QAAWJ,EAAMK,MAAOJ,UAAU,kBAA1C,6BCIOK,EAZC,SAAAN,GACZ,OACG,qBAAKC,UAAU,cAAf,SACL,qBAAKA,UAAU,iBAAiBM,MAAO,CAACC,MAAO,QAAUC,OAAQ,SAAUC,KAAK,SAAhF,SACE,sBAAMT,UAAU,UAAhB,6BCCAU,EAAM,gFADM,oCAoEDC,EAjEF,SAACZ,GAAW,IAAD,EAEKa,mBAAS,IAFd,mBAEjBC,EAFiB,KAERC,EAFQ,OAGGF,mBAAS,KAHZ,mBAGjBG,EAHiB,KAGTC,EAHS,OAICJ,oBAAS,GAJV,mBAIjBK,EAJiB,KAIVC,EAJU,KAQxBC,qBAAU,WACND,GAAQ,GACRE,EAASC,IAAIX,GACZY,MAAK,SAAAC,GAAUT,EAAUS,EAAMC,KAAKC,QAAQC,KAAKC,YAAaT,GAAQ,MAASU,OAAM,SAAAC,GAAK,OAAIb,EAASa,QAAU,IAGtHV,qBAAU,kBAAKW,QAAQC,IAAIhC,MAE3B,IAWIiC,EAAOnB,EAAOoB,KAAI,SAACV,GAClB,OAAO,cAAC,EAAD,CACatB,MAAQsB,EAAMA,MAAMW,WACpBhC,WAAcqB,EAAMA,MAAMY,YAC1B/B,MAAS,kBAfb,SAACgC,EAAQC,EAAUC,GACpC,IAAIC,EAAc,CAACC,mBAAmBJ,GAAUI,mBAAmBH,GAAYG,mBAAmBF,IAClGvC,EAAM0C,QAAQC,KAAK,CACfC,SAAW,UACXC,OAAS,IAAML,EAAYM,KAAK,OAWAC,CAAavB,EAAMA,MAAMwB,SAAUxB,EAAMA,MAAMW,WAAWX,EAAMA,MAAMY,eAHhFZ,EAAMA,MAAMyB,aAQtC/B,IACDe,EAAO,cAAC,EAAD,KAGV,IAAIH,EAAQ,KAMZ,OALGd,IACHc,EAAQ,oBAAIvB,MAAQ,CAAC2C,MAAM,OAAnB,SAA4BlC,KAKhC,8BACC,sBAAKf,UAAY,kBAAjB,UACC,sBAAKA,UAAU,0BAAf,UACJ,qBAAKO,MAAM,MAAMC,OAAO,MAAM0C,QAAQ,YAAYlD,UAAU,kDAAkDmD,KAAK,eAAeC,MAAM,6BAAxI,SACA,sBAAMC,SAAS,UAAUC,EAAE,wYAErB,uDAEJ,sBAAKtD,UAAY,kBAAjB,UACEgC,EACD,8BACCH,a,OC9BS0B,eAhCG,SAAAxD,GAAU,IAAD,EACUa,mBAAS,IADnB,mBACpB4C,EADoB,KACRC,EADQ,KAGrBC,EAAkB,SAACC,GACzBA,EAAMC,iBACN7D,EAAM0C,QAAQC,KACd,CACEC,SAAW,UACXC,OAASY,KAWX,OACM,qBAAKxD,UAAY,wBAAjB,SACA,uBAAMA,UAAU,0BAA0B6D,SAAUH,EAApD,UACA,uBAAO1D,UAAU,uBAAuB8D,KAAK,SAASC,YAAY,oBAAoBC,aAAW,SAASC,SATxF,SAAEN,GACxBF,EAAcE,EAAMO,OAAOC,OAC3BrC,QAAQC,IAAIyB,MAQR,wBAAQxD,UAAU,uCAAuC8D,KAAK,SAAS3D,QAAWuD,EAAlF,oBACA,gCCCSH,eA1BA,SAAAxD,GAOX,OACI,gCACI,qBAAKC,UAAU,kCAAf,SACN,sBAAMG,QARgB,kBACxBJ,EAAM0C,QAAQC,KAAK,MAOoB1C,UAAU,+BAA/C,2BAEF,sBAAKA,UAAU,4CAAf,UACI,sBAAKO,MAAM,MAAMC,OAAO,MAAM0C,QAAQ,YAAYlD,UAAU,0BAA0BmD,KAAK,eAAeC,MAAM,6BAAhH,UACN,sBAAME,EAAE,sJACR,sBAAMD,SAAS,UAAUC,EAAE,mCAC3B,sBAAMA,EAAE,sEAEF,oBAAItD,UAAY,aAAhB,mD,QCyBOoE,EA3CG,SAAErE,GAAY,IAAD,IAGAa,mBAAS,IAHT,mBAGtByD,EAHsB,KAGbC,EAHa,KAc1BC,EAAM,GACJC,EAAc,IAAIC,gBAAgB1E,EAAM2E,SAAS9B,QAfzB,cAgBd4B,EAAYG,WAhBE,IAgB9B,IAAI,EAAJ,qBAAsC,CAAC,IAA/BC,EAA8B,QACrCL,EAAGK,EAAK,IAAMA,EAAK,IAjBU,8BAoB/B,IAAIC,EAAOC,OAAOD,KAAKN,GAUvB,OARApD,qBAAU,kBAAKW,QAAQC,IAAI8C,KAAM,IAEjC1D,qBAAU,WACPC,EAASC,IAAT,oCAA0CwD,EAAK,GAA/C,mBA3Ba,qCA4BZvD,MAAK,SAAAyD,GAAG,OAAIT,EAAUS,EAAIvD,KAAKC,QAAQC,KAAKsD,OAAOC,gBAAcrD,OAAM,SAAAC,SAAa,IAKxF,8BACA,sBAAK7B,UAAU,WAAf,UACE,oBAAIA,UAAU,cAAd,SAA6B6E,EAAK,KAClC,sBAAK7E,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B6E,EAAK,KACjC,mBAAG7E,UAAU,YAAb,SAA0BqE,IAC1B,wBAAQlE,QA7BY,WACfJ,EAAM0C,QAAQyC,UA4BelF,UAAU,yBAA5C,8BC2BWmF,EA5DM,SAAApF,GAAU,IAAD,EACWa,mBAAS,IADpB,mBACnB4C,EADmB,KACNC,EADM,OAEmB7C,mBAAS,IAF5B,mBAEnBwE,EAFmB,KAEFC,EAFE,OAGDzE,oBAAS,GAHR,mBAGnBK,EAHmB,KAGZC,EAHY,KAM1BC,qBAAU,WACRD,GAAQ,GACR,IAAIoE,EAAavF,EAAM2E,SAAS9B,OAAO2C,QAAQ,IAAK,IACpDC,EAAUF,KACN,CAAC9B,IAIX,IAAMgC,EAAW,SAACF,GAEb7B,EAAc6B,GACd,IAAI5E,EAAM,gCAA4B4E,EAA5B,uEAnBC,oCAoBLlE,EAASC,IAAIX,GAAQY,MAAK,SAAAyD,GACtBjD,QAAQC,IAAIgD,EAAIvD,KAAKC,SACzB4D,EAAkBN,EAAIvD,KAAKC,QAAQC,KAAKC,YACxCT,GAAQ,MACRU,OAAM,SAAA6D,GAAG,OAAIC,MAAMD,OAY1B/D,EAAO,cAAC,EAAD,IAYP,OAXAT,IACAS,EAAQ0D,EAAenD,KAAI,SAAC0D,GACxB,OACJ,cAAC,EAAD,CAEA1F,MAAS0F,EAAMpE,MAAMqE,WACrB1F,WAAcyF,EAAMpE,MAAMY,YAC1B/B,MAAS,kBAjBQ,SAACgC,EAAQC,EAAUC,GACpC,IAAIC,EAAc,CAACC,mBAAmBJ,GAAUI,mBAAmBH,GAAYG,mBAAmBF,IAClGvC,EAAM0C,QAAQC,KAAK,CACfC,SAAW,UACXC,OAAS,IAAML,EAAYM,KAAK,OAarBC,CAAa6C,EAAMpE,MAAMwB,SAAU4C,EAAMpE,MAAMW,WAAWyD,EAAMpE,MAAMY,eAH9EwD,EAAMpE,MAAMwB,cASlB,8BACA,sBAAK/C,UAAY,qCAAjB,UACC,qBAAKA,UAAU,kBAAf,SACE,qBAAIM,MAAQ,CAAEuF,cAAgB,cAA9B,uBAAwDrC,OAE5D,qBAAKxD,UAAY,OAAjB,SACC0B,UCxCUoE,MAdf,WACE,OACE,cAAC,IAAD,UACA,gCACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAO,IAAIC,OAAK,EAACC,UAAatF,IACrC,cAAC,IAAD,CAAOoF,KAAO,UAAUE,UAAa7B,IACrC,cAAC,IAAD,CAAO2B,KAAO,UAAUE,UAAad,UCL1Be,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9E,MAAK,YAAkD,IAA/C+E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAGT,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGCC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7a83ed4d.chunk.js","sourcesContent":["import Axios from 'axios';\r\nconst instance = Axios.create({\r\n    baseURL : `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/`,\r\n}\r\n)\r\nexport default instance;","import React from 'react'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nconst SingleTrack = props => {\r\n    return (\r\n    <div className=\"col-sm-6 \">\r\n    <div className=\"card m-2 mt-2\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.title}</h5>\r\n        <p className=\"card-text\">{props.artistname}</p>\r\n        <button onClick = {props.click} className=\"btn btn-primary\">Lyrics</button>\r\n     </div>\r\n    </div>\r\n  </div>\r\n)\r\n}\r\n \r\nexport default SingleTrack\r\n","import React from 'react'\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Spinner = props => {\r\n    return (\r\n       <div className=\"text-center\">\r\n  <div className=\"spinner-border\" style={{width: '10rem' , height: '10rem'}} role=\"status\">\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </div>\r\n</div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport default Spinner\r\n","import React, { useEffect , useState } from 'react';\r\nimport Instance from '../Axios';\r\nimport SingleTrack from './SingleTrack';\r\nimport Spinner from './UI/Spinner';\r\n\r\n\r\n\r\nconst API_KEY = 'd202f1e62b3af62627c5c2f36246f4f1';\r\nlet REQ_ID = `chart.tracks.get?page=6&page_size=6&country=us&f_has_lyrics=10&apikey=${API_KEY}`;\r\n\r\nconst Body = (props) => {\r\n\r\nconst [Tracks , setTracks] = useState([]);\r\nconst [Error , setError] = useState(' ');\r\nconst [Spin , setSpin] = useState(false);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    setSpin(true)\r\n    Instance.get(REQ_ID)\r\n    .then(track => {setTracks(track.data.message.body.track_list); setSpin(false)}).catch(error => setError(error))}, [])\r\n\r\n\r\nuseEffect(()=> console.log(props))\r\n\r\nconst getIdHandler = (trackId,trackName,trackArtist) => {\r\n    let queryEncode = [encodeURIComponent(trackId), encodeURIComponent(trackName), encodeURIComponent(trackArtist)]\r\n    props.history.push({\r\n        pathname : '/lyrics',\r\n        search : '?' + queryEncode.join('&'),\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nlet song = Tracks.map((track) => {\r\n     return <SingleTrack key={track.track.album_id} \r\n                         title= {track.track.album_name} \r\n                         artistname = {track.track.artist_name}\r\n                         click = {() => getIdHandler(track.track.track_id ,track.track.album_name,track.track.artist_name )}/>\r\n })\r\n\r\n\r\n\r\nif (Spin)\r\n { song = <Spinner/> }\r\n\r\n\r\nlet error = null;\r\nif(Error){\r\nerror = <h1 style ={{color:'red'}}>{Error}</h1>\r\n}\r\n\r\n\r\nreturn(\r\n    <div>\r\n     <div className = 'container mt-5 '>\r\n      <div className='row  align-items-center'>\r\n  <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\" align-center textbi bi-file-earmark-music-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path fillRule=\"evenodd\" d=\"M2 2a2 2 0 0 1 2-2h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm7.5 1.5v-2l3 3h-2a1 1 0 0 1-1-1zM11 6.64a1 1 0 0 0-1.243-.97l-1 .25A1 1 0 0 0 8 6.89v4.306A2.572 2.572 0 0 0 7 11c-.5 0-.974.134-1.338.377-.36.24-.662.628-.662 1.123s.301.883.662 1.123c.364.243.839.377 1.338.377.5 0 .974-.134 1.338-.377.36-.24.662-.628.662-1.123V8.89l2-.5V6.64z\"/>\r\n  </svg>\r\n        <h4>Today's top 6 hits</h4>\r\n    </div>\r\n    <div className = 'row text-center'>\r\n     {song}\r\n     <div>\r\n     {error}\r\n     </div>\r\n     </div>\r\n    </div>\r\n    </div>  \r\n);  \r\n}\r\nexport default Body;\r\n","import React, {useState ,} from 'react'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nconst Searchbox = props => {\r\nconst [ArtistName, setArtistName] =  useState('')\r\n\r\nconst onSubmitHandler = (event) => {\r\nevent.preventDefault();\r\nprops.history.push(\r\n{\r\n  pathname : '/search',\r\n  search : ArtistName,\r\n\r\n})\r\n\r\n}\r\nconst onChangeHandler = ( event ) =>{\r\n  setArtistName(event.target.value);\r\n  console.log(ArtistName)\r\n}\r\n\r\n\r\nreturn (\r\n      <div className = 'container-fluid mt-5 '>\r\n      <form className=\"form-inline offset-md-5\" onSubmit={onSubmitHandler}>\r\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder='Enter artist name' aria-label=\"Search\" onChange={onChangeHandler}/>\r\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick = {onSubmitHandler} >Search</button>\r\n      <div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Searchbox)\r\n","import '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nconst Header = props => {\r\n\r\nconst returnToHomeHandler = () => (\r\n    props.history.push('/')\r\n)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n      <span onClick = {returnToHomeHandler}className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\r\n    </nav>\r\n    <div className='mr-auto text-center align-content-center '>\r\n        <svg width=\"5em\" height=\"5em\" viewBox=\"0 0 16 16\" className=\"bi bi-music-note-beamed\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13c0-1.104 1.12-2 2.5-2s2.5.896 2.5 2zm9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2z\"/>\r\n  <path fillRule=\"evenodd\" d=\"M14 11V2h1v9h-1zM6 3v10H5V3h1z\"/>\r\n  <path d=\"M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4V2.905z\"/>\r\n</svg>\r\n        <h1 className = 'sans-serif'>Search song by Artist's name</h1>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default withRouter(Header)\r\n","import React,{useEffect , useState} from 'react'\r\nimport Instance from '../Axios';\r\n\r\nconst API_KEY = 'd202f1e62b3af62627c5c2f36246f4f1';\r\n\r\nconst LyricsBox = ( props ) => {\r\n\r\n\r\n  const [Lyrics , setLyrics] = useState('')\r\n\r\n\r\n\r\n\r\n  const gobackHandler = () => {\r\n         props.history.goBack();\r\n  }\r\n \r\n\r\n\r\n let id  = {};\r\n const queryDecode = new URLSearchParams(props.location.search);\r\n for(let parm of queryDecode.entries()){\r\n  id[parm[0]] = parm[1]\r\n }\r\n\r\nlet keys = Object.keys(id)\r\n\r\nuseEffect(() =>console.log(keys),[])\r\n\r\nuseEffect(() => {\r\n   Instance.get(`track.lyrics.get?track_id=${keys[0]}&apikey=${API_KEY}`)\r\n   .then(res => setLyrics(res.data.message.body.lyrics.lyrics_body)).catch(error=> {})},[])\r\n\r\n\r\n\r\nreturn (\r\n<div>\r\n<div className=\"card m-5\">\r\n  <h5 className=\"card-header\">{keys[1]}</h5>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{keys[2]}</h5>\r\n    <p className=\"card-text\">{Lyrics}</p>\r\n    <button onClick = {gobackHandler} className=\"btn btn-primary m-auto\">Go back</button>\r\n  </div>\r\n</div>\r\n</div>)\r\n}\r\n\r\nexport default LyricsBox\r\n\r\n","import React, {useState , useEffect} from 'react'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport SingleTrack from './SingleTrack';\r\nimport Instance from '../Axios';\r\nimport Spinner from './UI/Spinner';\r\n\r\n\r\nconst API_KEY = 'd202f1e62b3af62627c5c2f36246f4f1';\r\n\r\nconst SearchResult = props => {\r\n    const [ArtistName , setArtistName] = useState('')\r\n    const [SearchedTracks , setSearchedTracks] = useState([])\r\n    const [Spin , setSpin] = useState(false)\r\n     \r\n    \r\n    useEffect(() => {\r\n      setSpin(true)\r\n      let Artistname = props.location.search.replace('?', '');\r\n      fetchData(Artistname)\r\n        },[ArtistName])\r\n          \r\n\r\n\r\nconst fetchData= (Artistname)=>{\r\n    // i dont know why i used this crazylogic.\r\n     setArtistName(Artistname);\r\n     let REQ_ID = `track.search?q_artist=${Artistname}&page_size=6&page=1&s_track_rating=desc&f_has_lyrics&apikey=${API_KEY}`\r\n           Instance.get(REQ_ID).then(res => {\r\n               console.log(res.data.message)\r\n           setSearchedTracks(res.data.message.body.track_list);\r\n           setSpin(false)\r\n        }).catch(err => alert(err))\r\n}\r\n\r\nconst getIdHandler = (trackId,trackName,trackArtist) => {\r\n    let queryEncode = [encodeURIComponent(trackId), encodeURIComponent(trackName), encodeURIComponent(trackArtist)]\r\n    props.history.push({\r\n        pathname : '/lyrics',\r\n        search : '?' + queryEncode.join('&'),\r\n\r\n    })\r\n}\r\n\r\nlet body = <Spinner/>;\r\nif(!Spin){\r\n    body = (SearchedTracks.map((items) =>{\r\n        return (\r\n    <SingleTrack \r\n    key = {items.track.track_id}\r\n    title = {items.track.track_name}\r\n    artistname = {items.track.artist_name} \r\n    click = {() => getIdHandler(items.track.track_id ,items.track.album_name,items.track.artist_name )} />\r\n        )\r\n    }) )\r\n }\r\n    return (\r\n          \r\n     <div>\r\n     <div className = 'container mt-5 mr-auto text-center'>\r\n      <div className='row text-center'>\r\n        <h4 style= {{ textTransform : 'capitalize'}}>Songs by: {ArtistName}</h4>\r\n      </div>\r\n    <div className = 'row '>\r\n    {body}\r\n     </div>\r\n    </div> \r\n </div>\r\n    )\r\n}\r\nexport default SearchResult\r\n","import { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Body from './components/Body'\nimport SearchBox from './components/Searchbox';\nimport Header from './components/Header';\nimport {Route} from 'react-router-dom';\nimport LyricsBox from './components/LyricsBox';\nimport SearchResult from './components/SearchResult';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div>\n    <Header/>\n    <SearchBox/>\n    <Route path = '/' exact component = {Body}/>\n    <Route path = '/lyrics' component = {LyricsBox}/>\n    <Route path = '/search' component = {SearchResult}/>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  \n\n<React.StrictMode>\n <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}